{"version":3,"sources":["component/Movie.js","routes/Moviechart.js","component/Boxoffice.js","routes/Home.js","routes/Ticketing.js","routes/About.js","routes/Detail.js","component/Navigation.js","App.js","index.js"],"names":["rank","Movie","id","year","title","summary","medium_cover_image","small_cover_image","genres","large_cover_image","rating","runtime","_title","length","slice","className","to","pathname","state","src","alt","Moviechart","data","movies","loading","map","movie","Boxoffice","array","Home","i","replace","_calendar","today","Date","_year","getFullYear","_month","getMonth","_date","getDate","_day_1","getDay","_day_2","Day_1_Array","Day_2_Array","Ticketing","props","toggle","mode","setState","onSelect","date","_today","_d","Number","String","onClick","this","React","Component","About","Detail","location","history","undefined","push","genre","image","index","Navigation","App","Loading","Movies","getMovies","a","axios","get","path","exact","render","component","ReactDOM","document","getElementById"],"mappings":"gTAIIA,EAAO,EAiDIC,MA/Cf,YAA8H,IAA9GC,EAA6G,EAA7GA,GAAIC,EAAyG,EAAzGA,KAAMC,EAAmG,EAAnGA,MAAOC,EAA4F,EAA5FA,QAA4BC,GAAgE,EAAnFC,kBAAmF,EAAhED,oBAAuCE,GAAyB,EAA5CC,kBAA4C,EAAzBD,QAAQE,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,SAChHX,GAAY,GACJ,KACJA,EAAK,GAGT,IAAIY,EAAOR,EAKX,OAJGQ,EAAOC,OAAQ,KACdD,EAAS,iCAAOR,EAAMU,MAAM,EAAE,IAArB,UAIT,sBAAKC,UAAU,QAAf,UACI,eAAC,IAAD,CAAMC,GAAI,CACNC,SAAS,UAAD,OAAWf,GACnBgB,MAAM,CACFf,KAAKA,EACLC,MAAMA,EACNC,QAAQA,EACRC,mBAAmBA,EACnBE,OAAOA,EACPE,OAAOA,EACPC,QAAQA,IACRI,UAAU,aAVlB,UAWI,qBAAKA,UAAU,aAAf,SAA6Bf,IAC7B,qBAAKmB,IAAKb,EAAoBc,IAAKhB,EAAOA,MAAOA,OAEjD,sBAAKW,UAAU,mBAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BH,IAC7B,qBAAIG,UAAU,oBAAd,0BAAsCL,EAAtC,iCAAwDP,Y,MCM7DkB,MArCf,SAAoBC,GAClB,IAAMC,EAASD,EAAKC,OAChBC,EAAUF,EAAKE,QAEnB,OACE,yBAAST,UAAU,MAAnB,SACKS,EAEG,qBAAKT,UAAU,UAAf,SACE,sBAAMA,UAAU,eAAhB,0BAIF,qBAAKA,UAAU,SAAf,SAEEQ,EAAOE,KAAI,SAAAC,GAAK,OACd,cAAC,EAAD,CAEAxB,GAAIwB,EAAMxB,GACVC,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfE,kBAAmBmB,EAAMnB,kBACzBD,mBAAoBoB,EAAMpB,mBAC1BG,kBAAmBiB,EAAMjB,kBACzBD,OAAQkB,EAAMlB,OACdE,OAAQgB,EAAMhB,OACdC,QAASe,EAAMf,SAVVe,EAAMxB,YCjBvBF,G,MAAO,GA+CI2B,MA7Cf,YAAkI,IAA9GzB,EAA6G,EAA7GA,GAAIC,EAAyG,EAAzGA,KAAMC,EAAmG,EAAnGA,MAAOC,EAA4F,EAA5FA,QAA4BC,GAAgE,EAAnFC,kBAAmF,EAAhED,oBAAuCE,GAAyB,EAA5CC,kBAA4C,EAAzBD,QAAQE,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,QAMpH,OALAX,GAAY,GACJ,IACJA,EAAK,GAIL,sBAAKe,UAAU,YAAf,UACI,eAAC,IAAD,CAAMC,GAAI,CACNC,SAAS,UAAD,OAAWf,GACnBgB,MAAM,CACFf,KAAKA,EACLC,MAAMA,EACNC,QAAQA,EACRC,mBAAmBA,EACnBE,OAAOA,EACPE,OAAOA,EACPC,QAAQA,IACRI,UAAU,aAVlB,UAWI,qBAAKA,UAAU,aAAf,SAA6Bf,IAC7B,qBAAKmB,IAAKb,EAAoBc,IAAKhB,EAAOA,MAAOA,OAErD,sBAAKW,UAAU,iBAAf,UACI,qBAAKA,UAAU,OAAf,SACI,oBAAGA,UAAU,eAAb,cAA8Bb,OAElC,cAAC,IAAD,CAAMc,GAAG,aAAT,iCC5BZY,EAAQ,GA6CGC,MApCf,SAAcP,GACZ,IAAMC,EAASD,EAAKC,OAChBC,EAAUF,EAAKE,QAiBnB,OA1BF,SAAiBE,GACf,IAAI,IAAII,EAAE,EAAGA,EAAE,EAAGA,IAChBF,EAAME,GAAKJ,EAAMI,GAsBnBC,CAdcR,EAAOE,KAAI,SAAAC,GAAK,OAC5B,cAAC,EAAD,CAEAxB,GAAIwB,EAAMxB,GACVC,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfE,kBAAmBmB,EAAMnB,kBACzBD,mBAAoBoB,EAAMpB,mBAC1BG,kBAAmBiB,EAAMjB,kBACzBD,OAAQkB,EAAMlB,OACdE,OAAQgB,EAAMhB,OACdC,QAASe,EAAMf,SAVVe,EAAMxB,QAeX,yBAASa,UAAU,MAAnB,SACKS,EACG,sBAAKT,UAAU,UAAf,cAA0B,sBAAMA,UAAU,eAAhB,wBAA1B,OAEA,sBAAKA,UAAU,cAAf,UAEI,oBAAIA,UAAU,kBAAd,4CACA,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,WAA5B,4DAEDa,Q,QCvCXI,G,OAAW,MACXC,EAAO,IAAIC,KACXC,EAAOF,EAAMG,cACbC,EAAQJ,EAAMK,WACdC,EAAON,EAAMO,UACbC,EAASR,EAAMS,SACfC,EAASV,EAAMS,SACnBL,GAAc,EACd,IAAMO,EAAc,CAAC,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,gBAC7CC,EAAc,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,UAC7CF,EAASC,EAAYD,G,IA4DNG,E,kDAzDb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAMVC,OAAO,WACkB,QAAlB,EAAK9B,MAAM+B,MACZ,EAAKC,SAAS,CACZD,KAAK,OAEPjB,EAAY,cAAC,IAAD,CAAUmB,SAAU,SAAUC,GACxC,IAAIC,EAASD,EAAKE,GAClBnB,EAAQkB,EAAOjB,cACfC,EAASgB,EAAOf,WAChBD,GAAe,EACfE,EAAQc,EAAOb,UACfG,EAASU,EAAOX,SAGdC,EADCF,IAAWE,EACHC,EAAYD,GAEZE,EAAYF,OAIC,OAAlB,EAAKzB,MAAM+B,OACnB,EAAKC,SAAS,CACZD,KAAK,QAEPjB,EAAY,OA7Bd,EAAKd,MAAQ,CACX+B,KAAO,OAHO,E,0CAmClB,WAEE,OACA,qBAAKlC,UAAU,YAAf,SACI,sBAAKA,UAAU,oBAAf,UAEI,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,gBAAf,uCACA,2CAGF,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UAAgCwC,OAAOpB,GAAvC,KAAiDoB,OAAOlB,GAAxD,KAAmEkB,OAAOhB,GAA1E,IAAmFiB,OAAOb,GAA1F,OACA,mBAAG5B,UAAU,sBAAsB0C,QAASC,KAAKV,OAAjD,SAA0DhB,gB,GAjDhD2B,IAAMC,WCLfC,MARf,WACI,OACI,sBAAM9C,UAAU,QAAhB,SACI,2E,OCyCG+C,MA1Cf,YAAqC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,QAIvB,QAHsBC,IAAnBF,EAAS7C,OACR8C,EAAQE,KAAK,KAEdH,EAAS7C,MAAM,CACd,IAAIiD,EAAQJ,EAAS7C,MAAMV,OACvBH,EAAQ0D,EAAS7C,MAAMb,QACvB+D,EAAOL,EAAS7C,MAAMZ,mBACtBI,EAAOqD,EAAS7C,MAAMR,OACtBP,EAAK4D,EAAS7C,MAAMf,KACpBQ,EAASoD,EAAS7C,MAAMP,QAC9B,OACE,sBAAKI,UAAU,aAAf,UACI,qBAAKI,IAAKiD,IACV,sBAAKrD,UAAU,kBAAf,UACI,oBAAIA,UAAU,mBAAd,SAAkCgD,EAAS7C,MAAMd,QACjD,sBAAKW,UAAU,WAAf,UACI,8CAEKoD,EAAM1C,KAAI,SAAC0C,EAAOE,GAAR,OACP,qCAAoB,IAAKF,IAAhBE,SAGjB,+BACI,iDAAUlE,EAAV,aACA,iDAAUO,KACV,+BAAKC,EAAL,kBAZZ,qBAmBI,qBAAKI,UAAU,qBAAf,SAAqCV,UAK7C,OAAO,M,OCxBAiE,MAdf,WACI,OACI,sBAAKvD,UAAU,MAAf,UACI,qBAAKA,UAAU,aACf,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,WAA5B,sCACA,cAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,WAAhC,0BACA,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBAAvB,SAAuC,mBAAGA,UAAU,cAAb,SAA2B,sBAAMA,UAAU,WAAhB,wBAClE,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,WAA5B,gCACA,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,WAA5B,0BACA,qBAAKA,UAAU,iB,iBC+BZwD,E,4MAjCbrD,MAAQ,CACNsD,SAAQ,EACRC,OAAO,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAC0BC,IAAMC,IAAI,4DADpC,gBACStD,EADT,EACHD,KAAMA,KAAMC,OACnB,EAAK2B,SAAS,CACZuB,OAAOlD,EACPiD,SAAQ,IAJA,2C,uDAQV,WACCd,KAAKgB,c,oBAGP,WAAS,IAAD,EACoBhB,KAAKxC,MAAxBsD,EADD,EACCA,QAASC,EADV,EACUA,OAChB,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOK,KAAK,SAASC,OAAO,EAAMC,OAAQ,kBAAM,cAAC,EAAD,CAAYzD,OAAQkD,EAAQjD,QAASgD,OACrF,cAAC,IAAD,CAAOM,KAAK,aAAaG,UAAWnC,IACpC,cAAC,IAAD,CAAOgC,KAAK,IAAIC,OAAO,EAAMC,OAAQ,kBAAM,cAAC,EAAD,CAAMzD,OAAQkD,EAAQjD,QAASgD,OAC1E,cAAC,IAAD,CAAOM,KAAK,SAASG,UAAWpB,IAChC,cAAC,IAAD,CAAOiB,KAAK,aAAaC,OAAO,EAAME,UAAWnB,W,GA3BvCH,IAAMC,WCNxBsB,IAASF,OAAO,cAAC,EAAD,IAAQG,SAASC,eAAe,U","file":"static/js/main.f96cdf26.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nimport { Link } from \"react-router-dom\";\r\nlet rank = 0;\r\n\r\nfunction Movie({id, year, title, summary, small_cover_image, medium_cover_image, large_cover_image, genres, rating, runtime}){\r\n    rank = rank+1;\r\n    if(rank>20){\r\n        rank=1;\r\n    } \r\n\r\n    let _title=title;\r\n    if(_title.length >24){\r\n        _title = <span>{title.slice(0,24)}...</span> \r\n    }\r\n\r\n    return (\r\n        <div className=\"movie\">\r\n            <Link to={{\r\n                pathname:`/movie/${id}`,\r\n                state:{\r\n                    year:year,\r\n                    title:title,\r\n                    summary:summary,\r\n                    medium_cover_image:medium_cover_image,\r\n                    genres:genres,\r\n                    rating:rating,\r\n                    runtime:runtime\r\n                }}} className=\"movie_link\">\r\n                <div className=\"movie_rank\">{rank}</div>\r\n                <img src={medium_cover_image} alt={title} title={title}></img>\r\n            </Link>\r\n                <div className=\"movie_main_title\">               \r\n                    <h1 className=\"movie_title\">{_title}</h1>\r\n                    <h5 className=\"movie_rating_year\">평점:{rating}점 | 개봉일 : {year}</h5>\r\n                </div>  \r\n        </div>          \r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    medium_cover_image: PropTypes.string.isRequired,\r\n    large_cover_image: PropTypes.string.isRequired,\r\n    rating:PropTypes.number.isRequired,\r\n    runtime:PropTypes.number.isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport Movie from \"../component/Movie\";\r\nimport \"./Moviechart.css\";\r\n\r\nfunction Moviechart(data){\r\n  const movies = data.movies;\r\n  let loading = data.loading; \r\n\r\n  return(\r\n    <section className=\"App\">\r\n        {loading ? \r\n          (\r\n            <div className=\"loading\">\r\n              <span className=\"loading_text\">Loading...</span>\r\n            </div> \r\n          ) : \r\n          (\r\n            <div className=\"movies\">\r\n              {\r\n              movies.map(movie=>(\r\n                <Movie \r\n                key={movie.id}\r\n                id={movie.id} \r\n                year={movie.year} \r\n                title={movie.title} \r\n                summary={movie.summary} \r\n                small_cover_image={movie.small_cover_image}\r\n                medium_cover_image={movie.medium_cover_image}\r\n                large_cover_image={movie.large_cover_image}\r\n                genres={movie.genres}\r\n                rating={movie.rating}\r\n                runtime={movie.runtime}\r\n              />)) \r\n              }\r\n            </div>\r\n          )}\r\n\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Moviechart;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Boxoffice.css\";\r\nimport { Link } from \"react-router-dom\";\r\nlet rank = 0;\r\n\r\nfunction Boxoffice({id, year, title, summary, small_cover_image, medium_cover_image, large_cover_image, genres, rating, runtime}){\r\n    rank = rank+1;\r\n    if(rank>4){\r\n        rank=1;\r\n    } \r\n\r\n    return (\r\n        <div className=\"Boxoffice\">\r\n            <Link to={{\r\n                pathname:`/movie/${id}`,\r\n                state:{\r\n                    year:year,\r\n                    title:title,\r\n                    summary:summary,\r\n                    medium_cover_image:medium_cover_image,\r\n                    genres:genres,\r\n                    rating:rating,\r\n                    runtime:runtime\r\n                }}} className=\"movie_link\">\r\n                <div className=\"movie_rank\">{rank}</div>\r\n                <img src={medium_cover_image} alt={title} title={title}></img>\r\n            </Link>\r\n            <div className=\"Boxoffice_menu\">\r\n                <div className=\"good\">\r\n                    <i className=\"far fa-heart\"> {id}</i>\r\n                </div>\r\n                <Link to=\"/ticketing\">예매</Link>\r\n            </div>\r\n        </div>          \r\n    );\r\n    \r\n}\r\n\r\nBoxoffice.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    medium_cover_image: PropTypes.string.isRequired,\r\n    large_cover_image: PropTypes.string.isRequired,\r\n    rating:PropTypes.number.isRequired,\r\n    runtime:PropTypes.number.isRequired\r\n};\r\n\r\nexport default Boxoffice;","import React from \"react\";\r\nimport Boxoffice from \"../component/Boxoffice\";\r\nimport \"./Moviechart.css\";\r\nimport { Link } from \"react-router-dom\";\r\nlet array = [];\r\n\r\nfunction replace(movie) {\r\n  for(let i=0; i<4; i++){\r\n    array[i] = movie[i];\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction Home(data){\r\n  const movies = data.movies;\r\n  let loading = data.loading; \r\n  const movie = movies.map(movie=>(\r\n    <Boxoffice \r\n    key={movie.id}\r\n    id={movie.id} \r\n    year={movie.year} \r\n    title={movie.title} \r\n    summary={movie.summary} \r\n    small_cover_image={movie.small_cover_image}\r\n    medium_cover_image={movie.medium_cover_image}\r\n    large_cover_image={movie.large_cover_image}\r\n    genres={movie.genres}\r\n    rating={movie.rating}\r\n    runtime={movie.runtime}\r\n  />)); \r\n  replace(movie);\r\n  \r\n  return(\r\n    <section className=\"App\">\r\n        {loading ? \r\n          ( <div className=\"loading\"> <span className=\"loading_text\">Loading...</span> </div> \r\n          ) : \r\n          ( <div className=\"movies home\">\r\n             \r\n                <h4 className=\"home_menu_title\">박스오피스</h4>\r\n                <Link to=\"/movie\" className=\"addmovie\">더 많은 영화보기 +</Link>\r\n         \r\n              {array}\r\n            </div> )\r\n        }\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport Calendar from 'rc-calendar';\r\nimport \"./Ticketing.css\";\r\nlet _calendar =null;\r\nlet today =new Date();\r\nlet _year =today.getFullYear();\r\nlet _month =today.getMonth();\r\nlet _date =today.getDate();\r\nlet _day_1 = today.getDay();\r\nlet _day_2 = today.getDay();\r\n_month=_month+1;\r\nconst Day_1_Array = [\"오늘\",\"오늘\",\"오늘\",\"오늘\",\"오늘\",\"오늘\",\"오늘\"];\r\nconst Day_2_Array = [\"일\",\"월\",\"화\",\"수\",\"목\",\"금\",\"토\"];\r\n_day_2 = Day_1_Array[_day_2];\r\n\r\nclass Ticketing extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      mode : \"off\"\r\n    };\r\n}\r\n\r\ntoggle=()=>{\r\n    if(this.state.mode===\"off\"){\r\n      this.setState({\r\n        mode:\"on\",\r\n      });\r\n      _calendar = <Calendar onSelect={function (date: moment[]) {\r\n        let _today = date._d;\r\n        _year = _today.getFullYear();\r\n        _month = _today.getMonth();\r\n        _month= _month+1;\r\n        _date = _today.getDate();\r\n        _day_2 = _today.getDay();\r\n\r\n        if(_day_1 === _day_2){\r\n          _day_2 = Day_1_Array[_day_2];\r\n        } else {\r\n          _day_2 = Day_2_Array[_day_2];\r\n        }\r\n        \r\n      }}/>\r\n    } else if(this.state.mode===\"on\"){\r\n      this.setState({\r\n        mode:\"off\",\r\n      });\r\n      _calendar = null;\r\n    }\r\n}\r\n\r\n  render(){\r\n    \r\n    return(\r\n    <div className=\"ticketing\">\r\n        <div className=\"ticketing_topmenu\">\r\n\r\n            <div className=\"ticketing_movie own\">\r\n              <div className=\"ticketinmovie\">영화 선택</div>\r\n              <div> sdas</div>\r\n            </div>\r\n\r\n            <div className=\"ticketing_movie\">\r\n              <div className=\"ticketinmovie\">{Number(_year)}. {Number(_month)}. {Number(_date)}({String(_day_2)})</div>\r\n              <i className=\"far fa-calendar-alt\" onClick={this.toggle}>{_calendar}</i>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ticketing;\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nfunction About(){\r\n    return(\r\n        <span className=\"about\">\r\n            <h3>준비중 입니다.</h3>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport \"./Detail.css\";\r\n\r\n\r\nfunction Detail({location, history}){\r\n    if(location.state === undefined){// 클릭하지 않고 페이지를 열면 데이터가 없어서 바로 디테일 페이지로 갈경우\r\n        history.push(\"/\");// 메인페이지로 이동시킴\r\n    }\r\n    if(location.state){// 이렇게 하는 이유는 주소창을 한번더 검색하면 location이 존재하지 않기 때문에 에러 발생을 방지 \r\n        let genre = location.state.genres;\r\n        let summary=location.state.summary;\r\n        let image =location.state.medium_cover_image;\r\n        let rating=location.state.rating;\r\n        let year=location.state.year;\r\n        let runtime= location.state.runtime;\r\n      return (\r\n        <div className=\"movie_data\">\r\n            <img src={image}></img>\r\n            <div className=\"movie_data_info\">\r\n                <h3 className=\"movie_data_title\">{location.state.title}</h3>\r\n                <div className=\"data_box\"> \r\n                    <ul>  \r\n                        장르\r\n                        {genre.map((genre, index)=>(\r\n                            <li key={index}> - {\" \" +genre}</li>\r\n                        ))}\r\n                    </ul>\r\n                    <ul>\r\n                        <li>개봉 : {year} 년</li>\r\n                        <li>평점 : {rating}</li>\r\n                        <li>{runtime}분</li>\r\n                      \r\n                    </ul>\r\n           \r\n                    \r\n                </div>\r\n                줄거리\r\n                <div className=\"movie_data_summary\">{summary}</div>\r\n            </div>\r\n        </div>\r\n            );\r\n    } else{\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport \"./Navigation.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation(){\r\n    return(\r\n        <div className=\"nav\">\r\n            <div className=\"nav_menu\"/>\r\n            <Link to=\"/movie\" className=\"nav_menu\">영화차트</Link>\r\n            <Link to=\"/ticketing\" className=\"nav_menu\">예매</Link> \r\n            <Link to=\"/\" className=\"nav_menu icon\"><i className=\"fas fa-film\"><span className=\"fas_name\">CINEMA</span></i></Link> \r\n            <Link to=\"/about\" className=\"nav_menu\">이벤트</Link>\r\n            <Link to=\"/about\" className=\"nav_menu\">할인</Link>\r\n            <div className=\"nav_menu\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport {HashRouter, Route } from \"react-router-dom\";\r\nimport Moviechart from \"./routes/Moviechart\";\r\nimport Home from \"./routes/Home\";\r\nimport Ticketing from \"./routes/Ticketing\";\r\nimport About from \"./routes/About\";\r\nimport Detail from \"./routes/Detail\";\r\nimport Navigation from \"./component/Navigation\"\r\nimport axios from \"axios\";\r\n\r\nclass App extends React.Component{\r\n  state = {\r\n    Loading:true,\r\n    Movies:[]\r\n  };\r\n \r\n getMovies = async()=>{\r\n   const {data:{data:{movies}}}= await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n   this.setState({\r\n     Movies:movies,\r\n     Loading:false\r\n   })\r\n }\r\n \r\n   componentDidMount(){\r\n    this.getMovies();\r\n   }\r\n\r\n  render(){\r\n    const {Loading, Movies} = this.state;\r\n    return (\r\n      <HashRouter>\r\n        <Navigation/>\r\n        <Route path=\"/movie\" exact={true} render={() => <Moviechart movies={Movies} loading={Loading} />} />\r\n        <Route path=\"/ticketing\" component={Ticketing}/>\r\n        <Route path=\"/\" exact={true} render={() => <Home movies={Movies} loading={Loading} />} />\r\n        <Route path=\"/about\" component={About}/>\r\n        <Route path=\"/movie/:id\" exact={true} component={Detail}/>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n// props를 전달할때에 component=를 사용하면 렌더링할때 마다 새로운 컴포넌트 생성된다 이를 개선하기위해 render=를 사용함\r\n// render로 하면 함수형 컴포넌트를 수용하고 불필요한 마운트를 작동 하지않음\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n"],"sourceRoot":""}