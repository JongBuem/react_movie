{"version":3,"sources":["component/Navigation.js","component/Movie.js","routes/Moviechart.js","component/Boxoffice.js","routes/Home.js","routes/Ticketing.js","routes/About.js","routes/Detail.js","App.js","index.js"],"names":["Navigation","className","to","rank","Movie","id","year","title","summary","medium_cover_image","genres","rating","runtime","_title","length","slice","pathname","state","src","alt","Moviechart","data","movies","loading","map","movie","small_cover_image","large_cover_image","Boxoffice","count","Home","boxoffice","i","style","display","overflow","flexDirection","alignItems","fontSize","cursor","class","onClick","boxofficeMovies","document","getElementById","x","scrollLeft","scrollTo","leftArrow","rightArrow","_calendar","today","Date","_year","getFullYear","_month","getMonth","_date","getDate","_date_1","_day","getDay","_day_1","_ticketingmovie_time_title","_ticket","Day_1_Array","Day_2_Array","Ticketingmovieposter","bind","this","Ticketing","useState","mode","ticket","setState","time","when","where","times","setTimes","toggle","onSelect","date","_today","_d","Number","String","About","Detail","location","history","undefined","push","genre","image","index","width","App","Loading","Movies","getMovies","a","axios","get","console","log","path","exact","render","component","React","Component","ReactDOM"],"mappings":"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","file":"static/js/main.40dc75aa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navigation.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation(){\r\n    return(\r\n        <div className=\"nav\">\r\n            <div className=\"nav_menu\"/>\r\n            <Link to=\"/movie\" className=\"nav_menu\">영화차트</Link>\r\n            <Link to=\"/ticketing\" className=\"nav_menu\">예매</Link> \r\n            <Link to=\"/\" className=\"nav_menu icon\"><i className=\"fas fa-film\"><span className=\"fas_name\">CINEMA</span></i></Link> \r\n            <Link to=\"/about\" className=\"nav_menu\">이벤트</Link>\r\n            <Link to=\"/about\" className=\"nav_menu\">할인</Link>\r\n            <div className=\"nav_menu_side\">\r\n                <div className=\"nav_menu_side_item\">로그인</div>\r\n                <div className=\"nav_menu_side_item\">회원가입</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nimport { Link } from \"react-router-dom\";\r\nlet rank = 0; //평점순위\r\n\r\nfunction Movie({id, year, title, summary, medium_cover_image,  genres, rating, runtime}){\r\n    rank = rank+1; //평점순위 증가\r\n    if(rank>20){ //폄점순위를 20위 까지만 보여줌\r\n        rank=1; //더이상 순위증가를 막기위한 초기화\r\n    } \r\n\r\n    let _title=title; //영화 제목\r\n    if(_title.length >24){ //영화 제목이 24글자가 넘으면\r\n        _title = <span>{title.slice(0,24)}...</span> //24글자 뒤에는 ... 으로 표시\r\n    }\r\n\r\n    return (\r\n        <div className=\"movie\">\r\n            <Link to={{\r\n                pathname:`/movie/${id}`,\r\n                state:{\r\n                    year:year,\r\n                    title:title,\r\n                    summary:summary,\r\n                    medium_cover_image:medium_cover_image,\r\n                    genres:genres,\r\n                    rating:rating,\r\n                    runtime:runtime\r\n                }}} className=\"movie_link\">\r\n                <div className=\"movie_rank\">{rank}</div> {/*영화 평점순위*/}\r\n                <img src={medium_cover_image} alt={title} title={title}></img>  {/*영화 포스터*/}\r\n            </Link> {/*클릭시 영화정보 컴포넌트로 이동하면서 영화정보를 전달*/}\r\n                <div className=\"movie_main_title\"> {/*간단한 영화 정보, 제목, 평점, 개봉일*/}        \r\n                    <h1 className=\"movie_title\">{_title}</h1>\r\n                    <h5 className=\"movie_rating_year\">평점:{rating}점 | 개봉일 : {year}</h5>\r\n                </div>  \r\n        </div>          \r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    medium_cover_image: PropTypes.string.isRequired,\r\n    large_cover_image: PropTypes.string.isRequired,\r\n    rating:PropTypes.number.isRequired,\r\n    runtime:PropTypes.number.isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport Movie from \"../component/Movie\";\r\nimport \"./Moviechart.css\";\r\n\r\nfunction Moviechart(data){ //라우터에서 전달한 props를 인자로 받아옴\r\n  const movies = data.movies; //영화정보 변수\r\n  let loading = data.loading; //로딩상황 변수\r\n\r\n  return(\r\n    <section className=\"App\">\r\n        {loading ? \r\n          (\r\n            <div className=\"loading\">\r\n              <span className=\"loading_text\">Loading...</span>\r\n            </div> \r\n          ) : \r\n          (\r\n            <div className=\"movies\">\r\n              {\r\n              movies.map(movie=>(\r\n                <Movie\r\n                key={movie.id}\r\n                id={movie.id} \r\n                year={movie.year} \r\n                title={movie.title} \r\n                summary={movie.summary} \r\n                small_cover_image={movie.small_cover_image}\r\n                medium_cover_image={movie.medium_cover_image}\r\n                large_cover_image={movie.large_cover_image}\r\n                genres={movie.genres}\r\n                rating={movie.rating}\r\n                runtime={movie.runtime}\r\n              />)) \r\n              }\r\n            </div>\r\n          )}\r\n\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Moviechart;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Boxoffice.css\";\r\nimport { Link } from \"react-router-dom\";\r\nlet rank = 0; //평점순위\r\n\r\nfunction Boxoffice({id, year, title, summary, medium_cover_image, genres, rating, runtime, count}){\r\n    rank = rank+1; //평점순위 증가\r\n    if(rank>count){ //폄점순위를 4위까지만 보여줌\r\n        rank=1; //더이상 순위증가를 막기위한 초기화\r\n    } \r\n\r\n    return (\r\n        <div className=\"Boxoffice\" id={rank}>\r\n            \r\n            <Link to={{ \r\n                pathname:`/movie/${id}`,\r\n                state:{\r\n                    year:year,\r\n                    title:title,\r\n                    summary:summary,\r\n                    medium_cover_image:medium_cover_image,\r\n                    genres:genres,\r\n                    rating:rating,\r\n                    runtime:runtime\r\n                }}} className=\"movie_link\"> \r\n                <div className=\"movie_rank\">{rank}</div>  {/*영화 평점순위*/}\r\n                <img src={medium_cover_image} alt={title} title={title}></img> {/*영화 포스터*/}\r\n            </Link> {/*클릭시 영화정보 컴포넌트로 이동하면서 영화정보를 전달*/}\r\n            <div className=\"Boxoffice_menu\">\r\n                <div className=\"good\">\r\n                    <i className=\"far fa-heart\"> {id}</i> {/*영화 좋아요 갯수를 id로 임시 출력*/}\r\n                </div>\r\n                <Link to=\"/ticketing\">예매</Link> {/*클릭시 예매 컴포넌트로 이동*/}\r\n                \r\n            </div>\r\n        </div>          \r\n    );\r\n    \r\n}\r\n\r\nBoxoffice.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    medium_cover_image: PropTypes.string.isRequired,\r\n    large_cover_image: PropTypes.string.isRequired,\r\n    rating:PropTypes.number.isRequired,\r\n    runtime:PropTypes.number.isRequired\r\n};\r\n\r\nexport default Boxoffice;","import {useState, useEffect, React} from \"react\";\r\nimport Boxoffice from \"../component/Boxoffice\";\r\nimport \"./Moviechart.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Home(data){ //라우터에서 전달한 props를 인자로 받아옴\r\n  const movies = data.movies; //영화정보 변수\r\n  let loading = data.loading; //로딩상황 변수\r\n  let boxoffice = []; //영화정보를 출력할 배열\r\n  let count=10 //메인홈에 보여줄 영화의 갯수\r\n  // const [ScrollY, setScrollY] = useState(0);  // 스크롤값을 저장하기 위한 상태\r\n\r\n  // const handleFollow = () => {\r\n  //   setScrollY(movie.pageXOffset); // window 스크롤 값을 ScrollY에 저장\r\n  // }\r\n  // useEffect(() => {\r\n  //   console.log(\"ScrollY is \", ScrollY); // ScrollY가 변화할때마다 값을 콘솔에 출력\r\n  // }, [ScrollY])\r\n\r\n  // useEffect(() => {\r\n  //   const watch = () => {\r\n  //     window.addEventListener('scroll', handleFollow);\r\n  //   }\r\n  //   watch(); // addEventListener 함수를 실행\r\n  //   return () => {\r\n  //     window.removeEventListener('scroll', handleFollow); // addEventListener 함수를 삭제\r\n  //   }\r\n  // })\r\n\r\n  const movie = movies.map(movie=>( //영화정보를 새로운배열로 취하고 배열을 반환 \r\n    <Boxoffice //Boxoffice 컴포넌트 호출\r\n    key={movie.id} //영화정보의 id를 map의 key로 설정\r\n    id={movie.id} //영화고유 id\r\n    year={movie.year} //영화 개봉시기 \r\n    title={movie.title} //영화 제목\r\n    summary={movie.summary} //영화 줄거리\r\n    medium_cover_image={movie.medium_cover_image} //영화 포스터\r\n    large_cover_image={movie.large_cover_image}\r\n    genres={movie.genres} //영화 장르\r\n    rating={movie.rating} //영화 평점\r\n    runtime={movie.runtime} //영화 상영시간\r\n    count={count}\r\n  />)); \r\n\r\n  for(let i=0; i<count; i++){ //메인홈에 보여줄 영화의 갯수\r\n    boxoffice[i] = movie[i]; //갯수만큼 Boxoffice 컴포넌트를 저장 \r\n  }\r\n\r\n  const leftArrow = ()=>{\r\n    var boxofficeMovies = document.getElementById(\"boxofficeMovies\")\r\n    var x= boxofficeMovies.scrollLeft\r\n    boxofficeMovies.scrollTo(x-270, 0)\r\n  }\r\n\r\n  const rightArrow = ()=>{\r\n    var boxofficeMovies = document.getElementById(\"boxofficeMovies\")\r\n    var x= boxofficeMovies.scrollLeft\r\n    boxofficeMovies.scrollTo(x+270, 0)\r\n  }\r\n\r\n  return(\r\n    <section className=\"App\">\r\n        {loading ? \r\n          ( <div className=\"loading\"> <span className=\"loading_text\">Loading...</span> </div> \r\n          ) : \r\n          ( <div className=\"movies home\">\r\n                <h4 className=\"home_menu_title\">박스오피스</h4>\r\n                  <div style={{display:\"flex\",overflow:\"hidden\", flexDirection:\"row\"}}>\r\n                    <div style={{display:\"flex\", alignItems:\"center\"}}><i style={{fontSize:40, cursor:\"pointer\"}} class=\"fas fa-chevron-left\" onClick={()=>leftArrow()}></i></div>\r\n                    <div className=\"movies box\" id=\"boxofficeMovies\">\r\n                      {boxoffice} {/*갯수만큼 Boxoffice 컴포넌트를 호출*/}\r\n                    </div>\r\n                    <div style={{display:\"flex\", alignItems:\"center\"}}><i style={{fontSize:40, cursor:\"pointer\"}} class=\"fas fa-chevron-right\" onClick={()=>rightArrow()}></i></div>\r\n                  </div>\r\n            </div> )\r\n        }\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport Calendar from 'rc-calendar';\r\nimport \"./Ticketing.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nlet _calendar =<Calendar/>; //켈린더 API\r\nlet today =new Date(); //현재 시간, 날짜 정보\r\nlet _year =today.getFullYear(); //년도\r\nlet _month =today.getMonth() +1; //월\r\nlet _date =today.getDate(); //몇일\r\nlet _date_1 =today.getDate(); //켈린더가 선택한 일과 비교하기 위한 변수\r\nlet _day = today.getDay(); //요일 \r\nlet _day_1 = today.getDay(); //켈린더가 선택한 요일과 비교하기 위한 변수\r\nlet _ticketingmovie_time_title =\"영화를 선택해 주세요.\" //영화 선택전 제목\r\nlet _ticket = null; //매표 출력 \r\n\r\nconst Day_1_Array = [\"오늘\",\"오늘\",\"오늘\",\"오늘\",\"오늘\",\"오늘\",\"오늘\"]; //오늘 배열\r\nconst Day_2_Array = [\"일\",\"월\",\"화\",\"수\",\"목\",\"금\",\"토\"]; //요일 배열\r\n_day = Day_1_Array[_day]; //현재는 오늘이기 때문에 오늘배열 출력\r\n\r\n\r\nfunction Ticketingmovieposter({title, small_cover_image}){ //영화정보를 인자로 받아옴\r\n  let _title=title; //영화 제목\r\n  if(_title.length >20){ //영화제목이 20글자가 넘으면\r\n      _title = <span>{title.slice(0,20)}...</span> //20글자이후는 ...으로 표시\r\n  }\r\n  return( //해당영화를 클릭시 영화제목을 전역변수의 영화제목으로 변경\r\n\r\n      <Link to=\"/ticketing\" className=\"Ticketinposter\" onClick={function(){ _ticketingmovie_time_title = title; }.bind(this)}>\r\n        <img src={small_cover_image} className=\"Ticketinposter\"></img>\r\n        {/* <h4>{_title}</h4> */}\r\n\r\n        <h4>{title}</h4>\r\n      </Link>\r\n \r\n  );\r\n}\r\n\r\nfunction Ticketing(data){ //라우터에서 전달한 props를 인자로 받아옴\r\n  const [ state, setState ] = useState({ mode:\"off\", ticket:\"off\"}); //켈린더 와 매표의 초기모드\r\n  const [ times, setTimes ] = useState({ \r\n    count:0, //몇관\r\n    time:[ //상영시간\r\n      {when:\"10:30\", where:\"1관\"},\r\n      {when:\"11:30\", where:\"2관\"},\r\n      {when:\"12:00\", where:\"3관\"},\r\n      {when:\"12:50\", where:\"14관\"},\r\n      {when:\"14:30\", where:\"10관\"},\r\n      {when:\"17:00\", where:\"7관\"},\r\n      {when:\"19:23\", where:\"6관\"},\r\n      {when:\"20:00\", where:\"10관\"},\r\n      {when:\"21:10\", where:\"5관\"},\r\n      {when:\"22:10\", where:\"1관\"},\r\n      {when:\"23:30\", where:\"6관\"},\r\n    ]\r\n  });\r\n  const time = times.time \r\n  const movies = data.movies;\r\n  \r\n  const toggle=()=>{ //날짜 선택, 켈린더 이미지 클릭시\r\n      if(state.mode===\"on\"){ //켈린더 모드가 on일경우\r\n        _calendar = <Calendar onSelect={function (date) { //켈린더 API를\r\n          let _today = date._d;//켈린더가 선택한 날짜의 데이터의\r\n          _year = _today.getFullYear(); //연도\r\n          _month = _today.getMonth() +1; //월\r\n          _date = _today.getDate(); //일\r\n          _day = _today.getDay(); //요일\r\n          if(_day === _day_1 && _date === _date_1){ //오늘 [요일,일] 과 선택한 [요일,일] 이 같으면\r\n            _day = Day_1_Array[_day]; //켈린더의 요일을 오늘로 변경\r\n          } else { //그렇지 않다면 \r\n            _day = Day_2_Array[_day]; //켈린더의 해당 요일로 변경\r\n          }\r\n        }}/>\r\n        setState({ ...state, mode:\"off\",ticket:\"off\" }); //켈린더와 티켓 모드를 off으로 변경\r\n      } else if(state.mode===\"off\"){ //켈린더 모드가 off일경우\r\n        setState({ ...state, mode:\"on\",ticket:\"on\" }); //켈린더와 티켓 모드를 on으로 변경\r\n        _calendar = null; //켈린더를 지움\r\n      } \r\n  }\r\n\r\n  if(state.ticket===\"on\"){ //매표의 모드가 on일 경우\r\n    _ticket =  //\"_ticket\"은 매표정보를 출력\r\n    <div className=\"movie_ticket\"> \r\n      <span>매표</span>\r\n      <div>영화 : {_ticketingmovie_time_title}</div>\r\n      <div>날짜 : {Number(_year)}. {Number(_month)}. {Number(_date)}({String(_day)})</div>\r\n      <div>시간 : {time[times.count].when}  ({time[times.count].where})</div>\r\n    </div>\r\n  } else if(state.ticket===\"off\"){ //매표의 모드가  off일 경우\r\n    _ticket = null; //매표정보를 지움\r\n  }\r\n\r\n    return(\r\n    <div className=\"ticketing\">\r\n        <div className=\"ticketing_topmenu\">\r\n\r\n            <div className=\"ticketing_movie own\"> {/* 영화선택 메뉴 */}\r\n              <div className=\"ticketingmovie\">영화 선택</div>\r\n              <div data={data} className=\"ticketingmovie_poster\">\r\n                {\r\n                    movies.map(movie=>(\r\n                      <Ticketingmovieposter\r\n                      key={movie.id}\r\n                      title={movie.title} \r\n                      small_cover_image={movie.small_cover_image}/>)) \r\n                }\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"ticketing_movie\"> {/* 상영시간, 날짜, 메표 정보 메뉴 */}\r\n              <div className=\"ticketingmovie\" onClick={toggle}>\r\n                {Number(_year)}. {Number(_month)}. {Number(_date)}({String(_day)})\r\n                <i className=\"far fa-calendar-alt\" onClick={toggle} ></i>  \r\n              </div>\r\n              \r\n              <div className=\"ticketingmovie_calendar\">\r\n                <button onClick={toggle}>{_calendar}</button>\r\n                <div data={data} className=\"ticketingmovie_time\">\r\n                  {_ticketingmovie_time_title}\r\n                  <div className=\"twoD\">2D</div>\r\n                  <div className=\"ticketingmovie_time_info\">\r\n                      <div className=\"_time_info_1\">\r\n                          <div onClick={()=>{ setTimes({ ...times, count:0 });}}>{time[0].when}<span>{time[0].where}</span></div>\r\n                          <div onClick={()=>{ setTimes({ ...times, count:1 });}}>{time[1].when}<span>{time[1].where}</span></div>\r\n                          <div onClick={()=>{ setTimes({ ...times, count:2 });}}>{time[2].when}<span>{time[2].where}</span></div>\r\n                          <div onClick={()=>{ setTimes({ ...times, count:3 });}}>{time[3].when}<span>{time[3].where}</span></div>\r\n                          <div onClick={()=>{ setTimes({ ...times, count:4 });}}>{time[4].when}<span>{time[4].where}</span></div>\r\n                          <div onClick={()=>{ setTimes({ ...times, count:5 });}}>{time[5].when}<span>{time[5].where}</span></div>\r\n                          <div onClick={()=>{ setTimes({ ...times, count:6 });}}>{time[6].when}<span>{time[6].where}</span></div>\r\n                          <div onClick={()=>{ setTimes({ ...times, count:7 });}}>{time[7].when}<span>{time[7].where}</span></div>\r\n                          <div onClick={()=>{ setTimes({ ...times, count:8 });}}>{time[8].when}<span>{time[8].where}</span></div>\r\n                          <div onClick={()=>{ setTimes({ ...times, count:9 });}}>{time[9].when}<span>{time[9].where}</span></div>\r\n                          <div onClick={()=>{ setTimes({ ...times, count:10 });}}>{time[10].when}<span>{time[10].where}</span></div>\r\n                      </div>\r\n                   \r\n                  </div>\r\n                </div>\r\n                {_ticket }\r\n              </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Ticketing;\r\n\r\n\r\n","import React from \"react\";\r\n\r\nfunction About(){\r\n    return(\r\n        <div className=\"about\">\r\n            <h3>준비중 입니다...</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport \"./Detail.css\";\r\n\r\n\r\nfunction Detail({location, history}){ //영화정보와 페이지 history를 인자로 가져옴\r\n    if(location.state === undefined){ //영화포스터를 클릭하지 않고 해당주소로 이동할때\r\n        history.push(\"/\"); //메인페이지로 이동시킴, 전달받은 영화정보가 없기 때문\r\n    }\r\n    if(location.state){ //영화정보가 전달 됬다면\r\n        let title = location.state.title; //영화 제목\r\n        let genre = location.state.genres; //영화 장르\r\n        let summary=location.state.summary; //영화 줄거리\r\n        let image =location.state.medium_cover_image; //영화 포스터\r\n        let rating=location.state.rating; //영화평점\r\n        let year=location.state.year; //영화 개봉시기\r\n        let runtime= location.state.runtime; //영화 상영시간\r\n\r\n\r\n      return (\r\n       <div className=\"detail\">\r\n            <div className=\"movie_data\">\r\n                <img src={image}></img>\r\n                <div className=\"movie_data_info\">\r\n                    <h3 className=\"movie_data_title\">{title}</h3>\r\n                    <div className=\"data_box\"> \r\n                        <ul>  \r\n                            <b>장르</b>\r\n                            {genre.map((genre, index)=>(\r\n                                <li key={index}> - {\" \" +genre}</li>\r\n                            ))}\r\n                        </ul>\r\n                        <ul>\r\n                            <li><b>개봉 : </b>{year}년</li>\r\n                            <li><b>평점 : </b>  \r\n                                <span class='RatingStar'>\r\n                                    <span class='RatingScore'>\r\n                                        <span class='outer-star'>\r\n                                            <span class='inner-star' style={{width: rating*10+\"%\"}}/>\r\n                                        </span>\r\n                                    </span>\r\n                                    {rating}\r\n                                </span>\r\n                            </li>\r\n                            <li><b>상영 시간 :</b> {runtime}분</li>\r\n                        </ul>\r\n                    </div>\r\n                    <b>줄거리</b>\r\n                    <div className=\"movie_data_summary\">{summary}</div>\r\n                </div>\r\n            </div>\r\n       </div>\r\n            );\r\n    } else{\r\n        return null; // 영화정보가 전달 되지 않을때 에러 발생을 방지\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport {HashRouter, Route } from \"react-router-dom\";\r\nimport Navigation from \"./component/Navigation\"\r\nimport Moviechart from \"./routes/Moviechart\";\r\nimport Home from \"./routes/Home\";\r\nimport Ticketing from \"./routes/Ticketing\";\r\nimport About from \"./routes/About\";\r\nimport Detail from \"./routes/Detail\";\r\nimport axios from \"axios\";\r\n\r\nclass App extends React.Component{\r\n  state = {\r\n    Loading:true, //영화 API 정보들을 가져오기전, 로딩중\r\n    Movies:[] //영화정보 배열\r\n  };\r\n \r\n getMovies = async()=>{ //axios가 url 영화정보를 받아올때 까지 실행\r\n   const {data:{data:{movies}}}= await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"); //영화 정보를 가져오기 위한 작은 레이아웃\r\n   this.setState({\r\n     Movies:movies, //영화정보를 배열로 수정 \r\n     Loading:false //영화정보를 가져오기 성공, 로딩 끝\r\n   })\r\n }\r\n \r\n   componentDidMount(){ //render() 호출 이후 실행\r\n    this.getMovies(); //영화정보를 가져오는 함수\r\n   }\r\n\r\n  render(){ //원하는 컴포넌트들을 화면에 동시에 출력하거나 따로 출력하기 위한 라우터 이용\r\n    const {Loading, Movies} = this.state; //영화정보와 로딩상황을 변수로 나타냄\r\n    console.log(Movies)\r\n    return (\r\n      <HashRouter>\r\n        <Navigation/> {/*네비게이션 컴포넌트*/}\r\n        <Route path=\"/movie\" exact={true} render={() => <Moviechart movies={Movies} loading={Loading} />} /> {/*무비차트 라우터*/}\r\n        <Route path=\"/ticketing\" render={() => <Ticketing movies={Movies} loading={Loading} />} /> {/*예매 라우터*/}\r\n        <Route path=\"/\" exact={true} render={() => <Home movies={Movies} loading={Loading} />} /> {/*메인홈 라우터*/}\r\n        <Route path=\"/about\" component={About}/> {/*이벤트, 할인 라우터*/}\r\n        <Route path=\"/movie/:id\" exact={true} component={Detail}/> {/*영화정보 라우터*/}\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n// 라우터 컴포넌트에 props를 전달할때에 \"component=\"를 사용하면 렌더링할때 마다 새로운 컴포넌트 생성한다 이를 개선하기위해서 \"render=\"를 사용함\r\n// \"render=\" 는 함수형 컴포넌트를 수용하고 불필요한 마운트를 작동 하지않음\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n"],"sourceRoot":""}